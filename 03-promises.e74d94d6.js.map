{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SAEMC,EAAOC,SAASC,cAAc,QAC9BC,EAAeF,SAASC,cAAc,uBAExCE,EAAgB,EAChBC,EAAe,EAgBnB,IAAMC,EAAe,SAACC,EAAUC,IAdhC,SAAuBD,EAAUC,GAC/B,IAAMC,EAAgBC,KAAKC,SAAW,GAEtC,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3BC,YAAW,WACLN,EACFI,EAAQ,CAAEN,WAAUC,UAEpBM,EAAO,CAAEP,WAAUC,S,GAEpBA,E,KAKLQ,CAAcT,EAAUC,GACrBS,MAAK,SAAAC,G,IAAGC,EAAQD,EAARX,SAAUa,EAAKF,EAALV,MACjBa,EAAAvB,GAASwB,OAAOC,QAAQ,uBAAwCC,OAAfL,EAAS,QAAYK,OAANJ,EAAM,M,IAEvEK,OAAM,SAAAP,G,IAAGC,EAAQD,EAARX,SAAUa,EAAKF,EAALV,MAClBa,EAAAvB,GAASwB,OAAOI,QAAQ,sBAAqCF,OAAfL,EAAS,QAAYK,OAANJ,EAAM,M,KAwBzEpB,EAAK2B,iBAAiB,UApBH,SAAAC,GACjBA,EAAMC,iBACN,IAAMC,EAAaC,OAAO/B,EAAKgC,SAASxB,MAAMyB,OACxCC,EAAYH,OAAO/B,EAAKgC,SAASG,KAAKF,OAC5C9B,EAAaiC,UAAW,EAExB,IAAK,IAAIC,EAAI,EAAGA,EAAIrC,EAAKgC,SAASM,OAAOL,MAAOI,IAC9CjC,IAEAE,EAAaF,EADbC,EAAeyB,EAAaI,EAAYG,GAI1CtB,YAAW,WACTZ,EAAaiC,UAAW,C,GACR,IAAf/B,GAEHD,EAAgB,EAChBC,EAAe,C","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst form = document.querySelector('form');\nconst submitButton = document.querySelector('button[type=submit]');\n\nlet promiseNumber = 0;\nlet delayPromise = 0;\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n\nconst notification = (position, delay) => {\n  createPromise(position, delay)\n    .then(({ position, delay }) => {\n      Notiflix.Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n    })\n    .catch(({ position, delay }) => {\n      Notiflix.Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n    });\n};\n\nconst btnHandler = event => {\n  event.preventDefault();\n  const delayValue = Number(form.elements.delay.value);\n  const stepValue = Number(form.elements.step.value);\n  submitButton.disabled = true;\n\n  for (let i = 0; i < form.elements.amount.value; i++) {\n    promiseNumber++;\n    delayPromise = delayValue + stepValue * i;\n    notification(promiseNumber, delayPromise);\n  }\n\n  setTimeout(() => {\n    submitButton.disabled = false;\n  }, delayPromise * 1.3);\n\n  promiseNumber = 0;\n  delayPromise = 0;\n};\n\nform.addEventListener('submit', btnHandler);\n"],"names":["$iU1Pc","parcelRequire","$ce04d3a99e08e73b$var$form","document","querySelector","$ce04d3a99e08e73b$var$submitButton","$ce04d3a99e08e73b$var$promiseNumber","$ce04d3a99e08e73b$var$delayPromise","$ce04d3a99e08e73b$var$notification","position","delay","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","$ce04d3a99e08e73b$var$createPromise","then","param","_$position","_$delay","$parcel$interopDefault","Notify","success","concat","catch","failure","addEventListener","event","preventDefault","delayValue","Number","elements","value","stepValue","step","disabled","i","amount"],"version":3,"file":"03-promises.e74d94d6.js.map"}